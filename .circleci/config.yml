version: 2
jobs:
  unittests:
    docker:
      - image: circleci/python:3.7.3

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-cache-{{ checksum "setup.py" }}
            - v1-cache-
      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -e .[dev]
      - save_cache:
          paths:
            - ./venv
          key: v1-cache-{{ checksum "setup.py" }}
      - run:
          name: Run unittests
          command: . venv/bin/activate && pytest --cov=./raiden_client --cov-fail-under=100 && codecov --token=$CODECOV_TOKEN 
      - run:
          name: Run mypy
          command: . venv/bin/activate && mypy -p raiden_client --config-file mypy.ini
      - run:
          name: Run flake8
          command: . venv/bin/activate && flake8 . --exclude=venv/
      - run:
          name: Run isort
          command: . venv/bin/activate &&  isort . --recursive -c -l 120 --skip venv/

  pypi_release:
    docker:
      - image: circleci/python:3.7.3
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate && pip install --upgrade pip wheel setuptools twine
      - run:
          name: Build package
          command: . venv/bin/activate && python setup.py sdist bdist_wheel
      - run:
          name: Deploy pypi
          command: . venv/bin/activate && twine upload dist/* 

workflows:
  version: 2
  build:
    jobs:
      - unittests:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
      - pypi_release:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
          requires:
            - unittests